{"ast":null,"code":"var _jsxFileName = \"/Work2/SCSC/SCSC_FrontEnd/src/cards/data_upload/components/AccessControl.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport GroupAdd from '@mui/icons-material/GroupAdd';\nimport GroupRemove from '@mui/icons-material/GroupRemove';\nimport FormGroup from '@mui/material/FormGroup';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport { Info } from '@mui/icons-material';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst accessLevelsDefault = {\n  \"VMetadata\": false,\n  \"Visualization\": false,\n  \"Download\": false,\n  \"Upload\": false,\n  \"EMetadata\": false\n};\nconst accessLevelsList = [\"VMetadata\", \"Visualization\", \"Download\", \"Upload\", \"EMetadata\"];\nconst accesibilityOptions = [{\n  \"key\": \"VMetadata\",\n  \"name\": \"View Metadata\",\n  \"desc\": \"Allows users' to view dataset's metadata.\"\n}, {\n  \"key\": \"Visualization\",\n  \"name\": \"Visualization\",\n  \"desc\": \"Allows visualization over dataset.\"\n}, {\n  \"key\": \"Download\",\n  \"name\": \"Download\",\n  \"desc\": \"Allow download of dataset files.\"\n}, {\n  \"key\": \"Upload\",\n  \"name\": \"Upload Data\",\n  \"desc\": \"Allows upload of new version of the dataset.\"\n}, {\n  \"key\": \"EMetadata\",\n  \"name\": \"Edit Metadata\",\n  \"desc\": \"Allows users' to update dataset's metadata.\"\n}];\n\n// HANDLES TOOLTIP\nfunction MyToolTip(_ref) {\n  let {\n    id\n  } = _ref;\n  const NoMaxWidthTooltip = styled(_ref2 => {\n    let {\n      className,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      ...props,\n      classes: {\n        popper: className\n      }\n    }, \"net\" + id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  })({\n    [`& .${tooltipClasses.tooltip}`]: {\n      maxWidth: 'none'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NoMaxWidthTooltip, {\n      title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"inherit\",\n          children: \"Accessibility\"\n        }, \"typo\" + id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), accesibilityOptions.map((x, i) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"string\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: x[\"name\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 78\n              }, this), \": \", x[\"desc\"]]\n            }, x[\"key\"] + i + \"-\" + id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 122\n            }, this)]\n          }, x[\"key\"] + i + \"-\" + id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 20\n          }, this);\n        })]\n      }, \"rf\" + id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Info, {}, \"in\" + id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, \"net\" + id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// ACTUAL HANDLING OF THE ACCESS CONTROL TAB\n_c = MyToolTip;\nexport default function AccessControl(_ref3) {\n  _s();\n  let {\n    handleInternalChange_pg3\n  } = _ref3;\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [groupsList, setGroupsList] = React.useState([]);\n  const [accessNum, setAccessNum] = React.useState(1);\n  const [dialogVals, setDialogVals] = useState(accessLevelsDefault);\n\n  // HANDLES THE DROPDOWN OF VARIOUS  ACCESSIBILITY LEVELS\n  function AccessibilityOptions(_ref4) {\n    let {\n      op1,\n      op2,\n      op3,\n      op4,\n      op5,\n      groups,\n      group_item,\n      indx\n    } = _ref4;\n    var optionsList = [op1, op2, op3, op4, op5];\n    const handleAccessibilityChange = event => {\n      //console.log(event.target);\n      console.log(\"CHANGED ACCESSIBILITY\", group_item);\n      if (event.target.type === \"checkbox\") {\n        var clickedOption = event.target.value;\n        //console.log(\"CC\", clickedOption, group_item[clickedOption]);\n        if (group_item[clickedOption] === null) group_item[clickedOption] = true;else group_item[clickedOption] = !group_item[clickedOption];\n      }\n      setGroupsList(prevGroups => [...groups]);\n      handleInternalChange_pg3(groupsList);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          onChange: handleAccessibilityChange,\n          children: accesibilityOptions.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: optionsList[i],\n                value: x[\"key\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 57\n              }, this),\n              label: x[\"name\"]\n            }, x[\"key\"], false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  // HANDLES THE DROPDOWN OF VARIOUS  ACCESSIBILITY LEVELS\n  function AccessibilityOptionsDialog(_ref5) {\n    let {\n      dialogVals\n    } = _ref5;\n    //var optionsList = [op1, op2, op3, op4, op5];\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: accesibilityOptions.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: dialogVals[i],\n                value: x[\"key\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 57\n              }, this),\n              label: x[\"name\"]\n            }, x[\"key\"], false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  const handleDialogOpen = num => {\n    console.log(\"YOU PRESSED\", num);\n    setDialogOpen(true);\n  };\n\n  // CLOSING DIALOG WITHOUT ADDING\n  const handleDialogClose = () => {\n    setDialogVals(accessLevelsDefault);\n    setDialogOpen(false);\n  };\n  const handleDialogChange = event => {\n    if (\"dgroup_name\" === event.target.id) {\n      dialogVals['groupName'] = event.target.value;\n    } else if (event.target.type === \"checkbox\") {\n      var optname = event.target.value;\n      if (dialogVals[optname] === null) dialogVals[optname] = true;else dialogVals[optname] = !dialogVals[optname];\n    }\n  };\n\n  // CLICKING ON ADD GROUP\n  const handleDialogAdd = event => {\n    setDialogOpen(false);\n    setGroupsList([...groupsList, dialogVals]);\n    setDialogVals(accessLevelsDefault);\n  };\n  const initial_select_members_info = [{\n    groupName: \"MYGROUP\",\n    \"VMetadata\": true,\n    \"Visualization\": true,\n    \"Download\": true,\n    \"Upload\": true,\n    \"EMetadata\": true\n  }, {\n    groupName: \"ab\",\n    \"VMetadata\": true\n  }, {\n    groupName: \"ac\",\n    \"VMetadata\": true\n  }];\n  const initial_groups_info = [{\n    groupName: \"MYGROUP\",\n    \"VMetadata\": true,\n    \"Visualization\": true,\n    \"Download\": true,\n    \"Upload\": true,\n    \"EMetadata\": true\n  }];\n  const public_groups_info = [{\n    groupName: \"PUBLIC\",\n    \"VMetadata\": true,\n    \"Visualization\": true,\n    \"Download\": true,\n    \"Upload\": false,\n    \"EMetadata\": false\n  }];\n  const handleChange = event => {\n    setAccessNum(event.target.value);\n    if (event.target.value === 4) setGroupsList([...public_groups_info]);else if (event.target.value === 3) setGroupsList([...initial_select_members_info]);else if (event.target.value === 2) setGroupsList([...initial_groups_info]);else setGroupsList([]);\n    handleInternalChange_pg3(groupsList);\n  };\n  const handleSaveState = event => {\n    handleInternalChange_pg3(groupsList);\n  };\n  const handleRemoveElementOnClick = num => {\n    groupsList.splice(num, 1);\n    setGroupsList([...groupsList]);\n    console.log(num);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Access Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Access Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"groupLevel\",\n            value: accessNum,\n            label: \"groupLevel\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 1,\n              children: \"Owner Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 2,\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"Select Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 4,\n              children: \"All Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), groupsList.map((x, i) => {\n        //console.log(\">>\",x, x[\"\"+accessLevelsList[0]])\n        //console.log(\">> REGENERATING!!\")\n        // FINAL GROUP WITH THE REMOVE AND ADD BUTTON\n        if (groupsList.length === 1) {\n          if (accessNum === 2 || accessNum === 4) {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  children: x.groupName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AccessibilityOptions, {\n                op1: x[accessLevelsList[0]],\n                op2: x[accessLevelsList[1]],\n                op3: x[accessLevelsList[2]],\n                op4: x[accessLevelsList[3]],\n                op5: x[accessLevelsList[4]],\n                groups: groupsList,\n                group_item: groupsList[i],\n                indx: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(MyToolTip, {\n                  id: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  children: x.groupName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AccessibilityOptions, {\n                op1: x[accessLevelsList[0]],\n                op2: x[accessLevelsList[1]],\n                op3: x[accessLevelsList[2]],\n                op4: x[accessLevelsList[3]],\n                op5: x[accessLevelsList[4]],\n                groups: groupsList,\n                group_item: groupsList[i],\n                indx: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(MyToolTip, {\n                  id: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  value: i,\n                  onClick: () => handleDialogOpen(i),\n                  children: /*#__PURE__*/_jsxDEV(GroupAdd, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 103\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this);\n          }\n        } else {\n          if (i === groupsList.length - 1) {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  children: x.groupName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AccessibilityOptions, {\n                op1: x[accessLevelsList[0]],\n                op2: x[accessLevelsList[1]],\n                op3: x[accessLevelsList[2]],\n                op4: x[accessLevelsList[3]],\n                op5: x[accessLevelsList[4]],\n                groups: groupsList,\n                group_item: groupsList[i],\n                indx: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(MyToolTip, {\n                  id: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  value: i,\n                  color: \"error\",\n                  onClick: () => handleRemoveElementOnClick(i),\n                  children: /*#__PURE__*/_jsxDEV(GroupRemove, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 126\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  value: i,\n                  onClick: () => handleDialogOpen(i),\n                  children: /*#__PURE__*/_jsxDEV(GroupAdd, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 103\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this);\n          } else {\n            // ALL OTHER GROUPS WITH JUST THE REMOVE BUTTON\n            console.log(\"EE\", x);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  children: x.groupName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AccessibilityOptions, {\n                op1: x[accessLevelsList[0]],\n                op2: x[accessLevelsList[1]],\n                op3: x[accessLevelsList[2]],\n                op4: x[accessLevelsList[3]],\n                op5: x[accessLevelsList[4]],\n                groups: groupsList,\n                group_item: groupsList[i],\n                indx: i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(MyToolTip, {\n                  id: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  value: i,\n                  color: \"error\",\n                  onClick: () => handleRemoveElementOnClick(i),\n                  children: /*#__PURE__*/_jsxDEV(GroupRemove, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 126\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this);\n          }\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Grant Group Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        onChange: handleDialogChange,\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter the name of the group you want to grant permission(s).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            margin: \"dense\",\n            id: \"dgroup_name\",\n            label: \"Group Name\",\n            type: \"dgroup_name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dialogSelectAccessLevel\",\n            children: [\"Access Level\\xA0\", /*#__PURE__*/_jsxDEV(MyToolTip, {\n              id: \"dialogue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccessibilityOptionsDialog, {\n            dialogVals: dialogVals\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"secondary\",\n          name: \"saveAddress\",\n          value: \"yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 36\n        }, this),\n        label: \"Some form of checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(AccessControl, \"qpRG8trBDqvdYdLY5wrr82qrOGk=\");\n_c2 = AccessControl;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyToolTip\");\n$RefreshReg$(_c2, \"AccessControl\");","map":{"version":3,"names":["React","useState","Typography","Grid","FormControlLabel","InputLabel","MenuItem","FormControl","Select","Button","GroupAdd","GroupRemove","FormGroup","Checkbox","Tooltip","tooltipClasses","styled","Info","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","accessLevelsDefault","accessLevelsList","accesibilityOptions","MyToolTip","_ref","id","NoMaxWidthTooltip","_ref2","className","props","classes","popper","fileName","_jsxFileName","lineNumber","columnNumber","tooltip","maxWidth","children","title","color","map","x","i","variant","_c","AccessControl","_ref3","_s","handleInternalChange_pg3","dialogOpen","setDialogOpen","groupsList","setGroupsList","accessNum","setAccessNum","dialogVals","setDialogVals","AccessibilityOptions","_ref4","op1","op2","op3","op4","op5","groups","group_item","indx","optionsList","handleAccessibilityChange","event","console","log","target","type","clickedOption","value","prevGroups","item","xs","md","onChange","control","checked","label","AccessibilityOptionsDialog","_ref5","handleDialogOpen","num","handleDialogClose","handleDialogChange","optname","handleDialogAdd","initial_select_members_info","groupName","initial_groups_info","public_groups_info","handleChange","handleSaveState","handleRemoveElementOnClick","splice","gutterBottom","container","spacing","fullWidth","required","labelId","length","onClick","open","onClose","margin","name","_c2","$RefreshReg$"],"sources":["/Work2/SCSC/SCSC_FrontEnd/src/cards/data_upload/components/AccessControl.js"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport GroupAdd from '@mui/icons-material/GroupAdd';\nimport GroupRemove from '@mui/icons-material/GroupRemove';\nimport FormGroup from '@mui/material/FormGroup';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport { Info } from '@mui/icons-material';\n\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nconst accessLevelsDefault = {\"VMetadata\": false, \"Visualization\": false, \"Download\": false, \"Upload\": false, \"EMetadata\": false};\nconst accessLevelsList = [\"VMetadata\", \"Visualization\", \"Download\", \"Upload\", \"EMetadata\"];\nconst accesibilityOptions = [{\"key\":\"VMetadata\", \"name\":\"View Metadata\", \"desc\": \"Allows users' to view dataset's metadata.\"},\n                             {\"key\":\"Visualization\", \"name\":\"Visualization\", \"desc\": \"Allows visualization over dataset.\"},\n                             {\"key\":\"Download\", \"name\":\"Download\", \"desc\": \"Allow download of dataset files.\"},\n                             {\"key\":\"Upload\", \"name\":\"Upload Data\", \"desc\": \"Allows upload of new version of the dataset.\"},\n                             {\"key\":\"EMetadata\", \"name\":\"Edit Metadata\", \"desc\": \"Allows users' to update dataset's metadata.\"}]\n          \n// HANDLES TOOLTIP\nfunction MyToolTip({id}) {\n\n  const NoMaxWidthTooltip = styled(({ className, ...props }) => (\n    <Tooltip key={\"net\"+id} {...props} classes={{ popper: className }} />\n    ))({\n    [`& .${tooltipClasses.tooltip}`]: {\n      maxWidth: 'none',\n    },\n  });\n\n\n  return (\n    <>\n      <NoMaxWidthTooltip key={\"net\"+id} title={\n        <React.Fragment key={\"rf\"+id}>\n          <Typography key={\"typo\"+id} color=\"inherit\">Accessibility</Typography>\n          {accesibilityOptions.map((x, i) => {\n            return(<React.Fragment key={ x[\"key\"]+i+\"-\"+id }>\n                      <Typography key={ x[\"key\"]+i+\"-\"+id } variant=\"string\"><b>{x[\"name\"]}</b>: {x[\"desc\"]}</Typography><br/>\n                   </React.Fragment>);\n          })}\n        </React.Fragment>\n      }>\n        \n        <Info key={\"in\"+id}/>\n      </NoMaxWidthTooltip>\n    </>\n  );\n}\n\n\n\n// ACTUAL HANDLING OF THE ACCESS CONTROL TAB\nexport default function AccessControl({handleInternalChange_pg3}) {\n\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  const [groupsList, setGroupsList] = React.useState([]);\n  const [accessNum, setAccessNum] = React.useState(1);\n\n  const [dialogVals, setDialogVals] = useState(accessLevelsDefault);\n\n  // HANDLES THE DROPDOWN OF VARIOUS  ACCESSIBILITY LEVELS\n  function AccessibilityOptions({ op1, op2, op3, op4, op5, groups, group_item, indx}) {\n\n    var optionsList = [op1, op2, op3, op4, op5];\n\n\n    const handleAccessibilityChange = (event) => {\n\n      //console.log(event.target);\n      console.log(\"CHANGED ACCESSIBILITY\", group_item)\n      if (event.target.type === \"checkbox\"){\n        var clickedOption = event.target.value;\n        //console.log(\"CC\", clickedOption, group_item[clickedOption]);\n        if (group_item[clickedOption] === null)\n          group_item[clickedOption] = true;\n        else\n          group_item[clickedOption] = !(group_item[clickedOption]);\n      }\n      \n      setGroupsList(prevGroups => ([...groups]));\n      handleInternalChange_pg3(groupsList);\n\n    };\n\n    return (\n      <>\n        <Grid item xs={12} md={5}>\n          <FormGroup onChange={handleAccessibilityChange}>\n          {accesibilityOptions.map((x, i) => {\n            return(\n              <FormControlLabel key={x[\"key\"]} control={<Checkbox checked={optionsList[i]} value={x[\"key\"]} />} label={x[\"name\"]} />\n            );\n          })}\n\n            \n          </FormGroup>\n        </Grid>\n      </>\n    );\n  }\n\n\n  // HANDLES THE DROPDOWN OF VARIOUS  ACCESSIBILITY LEVELS\n  function AccessibilityOptionsDialog({ dialogVals }) {\n\n    //var optionsList = [op1, op2, op3, op4, op5];\n\n    return (\n      <>\n        <Grid item xs={12} md={5}>\n          <FormGroup>\n          {accesibilityOptions.map((x, i) => {\n            return(\n              <FormControlLabel key={x[\"key\"]} control={<Checkbox checked={dialogVals[i]} value={x[\"key\"]} />} label={x[\"name\"]} />\n            );\n          })}\n\n            \n          </FormGroup>\n        </Grid>\n      </>\n    );\n  }\n\n\n  const handleDialogOpen = (num) => {\n    console.log(\"YOU PRESSED\", num);\n    setDialogOpen(true);\n  };\n\n  // CLOSING DIALOG WITHOUT ADDING\n  const handleDialogClose = () => {\n    setDialogVals(accessLevelsDefault);\n    setDialogOpen(false);\n  };\n\n  const handleDialogChange = (event) => {\n    if (\"dgroup_name\" === event.target.id) {\n      dialogVals['groupName'] = event.target.value\n    } else if (event.target.type === \"checkbox\"){\n      var optname = event.target.value;\n      if (dialogVals[optname] === null)\n        dialogVals[optname] = true;\n      else\n        dialogVals[optname] = !(dialogVals[optname]);\n    }\n\n  };\n\n  // CLICKING ON ADD GROUP\n  const handleDialogAdd = (event) => {\n    setDialogOpen(false);\n    setGroupsList([...groupsList, dialogVals]);\n    setDialogVals(accessLevelsDefault);\n\n  };\n\n  \n\n  const initial_select_members_info = [{ groupName: \"MYGROUP\", \"VMetadata\": true, \"Visualization\": true, \"Download\": true, \"Upload\": true, \"EMetadata\": true}, \n                               { groupName: \"ab\", \"VMetadata\": true}, \n                               { groupName: \"ac\", \"VMetadata\": true}];\n  const initial_groups_info = [{ groupName: \"MYGROUP\", \"VMetadata\": true, \"Visualization\": true, \"Download\": true, \"Upload\": true, \"EMetadata\": true}];\n  const public_groups_info = [{ groupName: \"PUBLIC\", \"VMetadata\": true, \"Visualization\": true, \"Download\": true, \"Upload\": false, \"EMetadata\": false}];\n\n\n  const handleChange = (event) => {\n    setAccessNum(event.target.value);\n    if (event.target.value === 4)\n      setGroupsList([...public_groups_info]);\n    else if (event.target.value === 3)\n      setGroupsList([...initial_select_members_info]);\n    else if (event.target.value === 2)\n      setGroupsList([...initial_groups_info]);\n    else\n      setGroupsList([]);\n    \n    handleInternalChange_pg3(groupsList);\n  };\n\n  const handleSaveState = (event) => {\n    handleInternalChange_pg3(groupsList);\n  };\n\n  const handleRemoveElementOnClick = (num) => {\n    groupsList.splice(num, 1);\n    setGroupsList([...groupsList]);\n    console.log(num);\n  }\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h5\" gutterBottom>\n        Access Information\n      </Typography>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12} md={12}>\n          <FormControl fullWidth required>\n            <InputLabel id=\"demo-simple-select-label\">Access Level</InputLabel>\n            <Select labelId=\"demo-simple-select-label\" id=\"groupLevel\" value={accessNum} label=\"groupLevel\" onChange={handleChange}>\n              <MenuItem value={1}>Owner Only</MenuItem>\n              <MenuItem value={2}>Group</MenuItem>\n              <MenuItem value={3}>Select Members</MenuItem>\n              <MenuItem value={4}>All Members</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {groupsList.map((x, i) => {\n          //console.log(\">>\",x, x[\"\"+accessLevelsList[0]])\n          //console.log(\">> REGENERATING!!\")\n          // FINAL GROUP WITH THE REMOVE AND ADD BUTTON\n          if (groupsList.length === 1) {\n            if (accessNum === 2 || accessNum === 4) {\n              return (\n\n                <React.Fragment key={i}>\n                  <Grid item xs={12} md={2}>\n                    <Button variant=\"text\">{x.groupName}</Button>\n                  </Grid>\n                  <AccessibilityOptions op1={x[accessLevelsList[0]]} op2={x[accessLevelsList[1]]} op3={x[accessLevelsList[2]]} \n                  op4={x[accessLevelsList[3]]} op5={x[accessLevelsList[4]]} groups={groupsList} group_item={groupsList[i]} indx={i}/>\n                  <Grid item xs={12} md={1}>\n                    <MyToolTip id={i}/>\n                  </Grid>\n                  \n                </React.Fragment>\n              );\n            } else {\n              return (\n\n                <React.Fragment key={i}>\n                  <Grid item xs={12} md={2}>\n                    <Button variant=\"text\">{x.groupName}</Button>\n                  </Grid>\n                  <AccessibilityOptions op1={x[accessLevelsList[0]]} op2={x[accessLevelsList[1]]} op3={x[accessLevelsList[2]]} \n                  op4={x[accessLevelsList[3]]} op5={x[accessLevelsList[4]]} groups={groupsList} group_item={groupsList[i]} indx={i}/>\n                  <Grid item xs={12} md={1}>\n                    <MyToolTip id={i}/>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={3}>\n                    <Button variant=\"contained\" key={i} value={i} onClick={() => handleDialogOpen(i)}><GroupAdd /></Button>\n                  </Grid>\n                </React.Fragment>\n              );\n            }\n          } else {\n            if (i === groupsList.length - 1) {\n              return (\n\n                <React.Fragment key={i}>\n                  <Grid item xs={12} md={2}>\n                    <Button variant=\"text\">{x.groupName}</Button>\n                  </Grid>\n                  <AccessibilityOptions op1={x[accessLevelsList[0]]} op2={x[accessLevelsList[1]]} op3={x[accessLevelsList[2]]} \n                  op4={x[accessLevelsList[3]]} op5={x[accessLevelsList[4]]} groups={groupsList} group_item={groupsList[i]} indx={i}/>\n                  <Grid item xs={12} md={1}>\n                    <MyToolTip id={i}/>\n                  </Grid>\n                  <Grid item xs={12} md={1}>\n                    <Button variant=\"outlined\" key={i} value={i} color=\"error\" onClick={() => handleRemoveElementOnClick(i)}><GroupRemove /></Button>\n                  </Grid>\n                  <Grid item xs={12} md={3}>\n                    <Button variant=\"contained\" key={i} value={i} onClick={() => handleDialogOpen(i)}><GroupAdd /></Button>\n                  </Grid>\n                </React.Fragment>\n              );\n            } else {\n              // ALL OTHER GROUPS WITH JUST THE REMOVE BUTTON\n              console.log(\"EE\",x);\n              return (\n\n                <React.Fragment key={i}>\n                  <Grid item xs={12} md={2}>\n                    <Button variant=\"text\">{x.groupName}</Button>\n                  </Grid>\n                  <AccessibilityOptions key={i} op1={x[accessLevelsList[0]]} op2={x[accessLevelsList[1]]} op3={x[accessLevelsList[2]]}\n                    op4={x[accessLevelsList[3]]} op5={x[accessLevelsList[4]]} groups={groupsList} group_item={groupsList[i]} indx={i}/>\n                  <Grid item xs={12} md={1}>\n                    <MyToolTip id={i}/>\n                  </Grid>\n                  <Grid item xs={12} md={3}>\n                    <Button variant=\"outlined\" key={i} value={i} color=\"error\" onClick={() => handleRemoveElementOnClick(i)}><GroupRemove /></Button>\n                  </Grid>\n                </React.Fragment>\n              );\n\n            }\n          }\n        })}\n      </Grid>\n\n\n      <Dialog open={dialogOpen} onClose={handleDialogClose}>\n        <DialogTitle>Grant Group Access</DialogTitle>\n        <DialogContent onChange={handleDialogChange}>\n          <DialogContentText>\n            Enter the name of the group you want to grant permission(s).\n          </DialogContentText>\n\n\n          <Grid item xs={12} md={6}>\n            <TextField required margin=\"dense\" id=\"dgroup_name\" label=\"Group Name\" type=\"dgroup_name\" />\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <InputLabel id=\"dialogSelectAccessLevel\">Access Level&nbsp;\n              <MyToolTip id={\"dialogue\"}/>\n            </InputLabel>\n\n            <AccessibilityOptionsDialog dialogVals={dialogVals}/>\n\n          </Grid>\n\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleDialogAdd}>Add</Button>\n        </DialogActions>\n      </Dialog>\n\n\n\n\n\n      <Grid item xs={12}>\n        <FormControlLabel control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />} label=\"Some form of checkbox\" />\n      </Grid>\n    </React.Fragment>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}